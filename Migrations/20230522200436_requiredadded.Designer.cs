// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MvcWine.Data;

#nullable disable

namespace NyWine.Migrations
{
    [DbContext(typeof(MvcWineContext))]
    [Migration("20230522200436_requiredadded")]
    partial class requiredadded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("NyWine.Wines.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("NyWine.Wines.Wine", b =>
                {
                    b.Property<int>("WineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductGuid")
                        .HasColumnType("char(36)");

                    b.HasKey("WineId");

                    b.HasAlternateKey("ProductGuid");

                    b.HasIndex("CategoryId");

                    b.ToTable("Wine");
                });

            modelBuilder.Entity("NyWine.Wines.WineDescription", b =>
                {
                    b.Property<int>("WineDescriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<float>("AlcoholPercentage")
                        .HasColumnType("float");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("WineId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("WineDescriptionId");

                    b.HasAlternateKey("WineId", "ModifiedDate");

                    b.HasIndex("CategoryId");

                    b.ToTable("WineDescription");
                });

            modelBuilder.Entity("NyWine.Wines.WineRemoved", b =>
                {
                    b.Property<int>("WineRemovedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("RemovedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("WineId")
                        .HasColumnType("int");

                    b.HasKey("WineRemovedId");

                    b.HasIndex("WineId");

                    b.ToTable("WineRemoved");
                });

            modelBuilder.Entity("NyWine.Wines.Wine", b =>
                {
                    b.HasOne("NyWine.Wines.Category", null)
                        .WithMany("Wines")
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("NyWine.Wines.WineDescription", b =>
                {
                    b.HasOne("NyWine.Wines.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NyWine.Wines.Wine", "Wine")
                        .WithMany("Descriptions")
                        .HasForeignKey("WineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Wine");
                });

            modelBuilder.Entity("NyWine.Wines.WineRemoved", b =>
                {
                    b.HasOne("NyWine.Wines.Wine", "Wine")
                        .WithMany("Removed")
                        .HasForeignKey("WineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Wine");
                });

            modelBuilder.Entity("NyWine.Wines.Category", b =>
                {
                    b.Navigation("Wines");
                });

            modelBuilder.Entity("NyWine.Wines.Wine", b =>
                {
                    b.Navigation("Descriptions");

                    b.Navigation("Removed");
                });
#pragma warning restore 612, 618
        }
    }
}
